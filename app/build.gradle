apply plugin: 'com.android.application'

def getVersionName = {
    // version should be 'SNAPSHOT', or of form 'x.y.z'
    return "0.1.0"
}
def getVersionCode = {
    def version = getVersionName()
    if(version == 'SNAPSHOT') {
        return 1
    }
    else {
        def versionParts = version.split(/\./)
        if (versionParts.length != 3)
            throw new RuntimeException("Unexpected version number - should be of form 'x.y.z', but was: $version")
        versionParts = versionParts.collect { Integer.parseInt(it) }
        if (versionParts[1] > 999 || versionParts[2] > 999)
            throw new RuntimeException('Version part greater than 999 not allowed.')
        int versionCode = (1000000 * versionParts[0]) +
                (1000 * versionParts[1]) +
                versionParts[2]
        if (versionCode > 2100000000)
            throw new RuntimeException('versionCode biggger than max allowed by Google Play.')
        return versionCode
    }
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.abbyad.example.smsintent"
        minSdkVersion 19
        targetSdkVersion 28
        versionName getVersionName()
        versionCode getVersionCode()
        archivesBaseName = "example-sms-intent-${versionName}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
